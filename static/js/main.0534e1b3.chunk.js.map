{"version":3,"sources":["presentation/layout/globalStyles.ts","lib/getQueryParams.ts","app-logic/feature/report.ts","app-logic/feature/issue.ts","app-logic/feature/file.ts","app-logic/feature/rule.ts","app-logic/reducerMap.ts","app-logic/hook/useReport.ts","app-logic/hook/useFile.ts","app-logic/hook/useRule.ts","lib/groupIssuesCount.ts","app-logic/hook/useIssues.ts","lib/iter.ts","app-logic/hook/createEventEmitter.ts","app-logic/hook/events.ts","lib/filePath.ts","presentation/util.tsx","presentation/Pill.tsx","presentation/Expandable.tsx","presentation/IssueCollapse.tsx","lib/extractLines.ts","presentation/FileCollapse.tsx","presentation/RuleTableRow.tsx","presentation/Island.tsx","presentation/ContentWithReport.tsx","presentation/ContentEmpty.tsx","presentation/Content.tsx","app-logic/hook/useTotalCounts.ts","presentation/Summary.tsx","presentation/layout/AppHeader.tsx","presentation/layout/AppProvider.tsx","app-logic/createStore.ts","presentation/layout/App.tsx","presentation/reportWebVitals.ts","index.tsx"],"names":["globalStyles","css","body","margin","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","code","minHeight","padding","getQueryParams","search","window","location","qs","replace","split","map","item","decodeURIComponent","qsMap","forEach","name","val","updateReportURL","createAction","updateReport","reportReducer","createReducer","report","url","builder","addCase","state","action","payload","issueAdapter","createEntityAdapter","selectId","issue","issueId","issueSlice","createSlice","initialState","getInitialState","reducers","extraReducers","results","issues","res","messages","msg","ruleId","push","nanoid","filePath","addMany","fileAdapter","itm","fileSlice","selectFiles","it","undefined","ruleAdapter","ruleSlice","selectRules","rulesMeta","metadata","Object","keys","ROOT_REDUCER","reducer","file","rule","rootSelect","useReport","dispatch","useDispatch","fetchReport","useMemo","a","console","log","axios","get","resp","data","reportState","useSelector","reportURL","selFile","getSelectors","selRule","groupIssuesCount","issuesList","issueTotalCount","length","errorCount","filter","is","fatal","warnCount","selIssue","useIssues","index","selectAll","filesWithIssuesMap","rulesViolatedMap","selectById","issuesQuantity","fileCount","ruleCount","memoHash","join","b","isDefined","obj","Date","now","Math","random","toString","eventNameMap","listenerMap","emitEvent","eventName","Promise","resolve","then","id","getEventListeners","onEvent","useEventListener","useEffect","removeListener","useEventEmitter","useCallback","createEventEmitter","removeLastSegment","parts","pop","GrayText","props","Typography","variant","color","children","SmallText","CollapseWithTitle","Box","onClick","onToggle","isOpen","p","display","flexDirection","alignItems","IconButton","aria-label","size","icon","up","down","title","Collapse","in","timeout","unmountOnExit","pt","yes","Check","style","fontSize","verticalAlign","no","Clear","KeyboardArrowUp","KeyboardArrowDown","CountPill","showZero","number","label","String","type","PillColor","error","warn","normal","Pill","backgroundColor","mr","Chip","Expandable","useState","setOpen","IssueCollapse","fileSource","lang","lines","source","startLine","endLine","offset","_line","extractLines","line","setCode","requestAnimationFrame","Prism","highlight","languages","message","data-start","className","dangerouslySetInnerHTML","__html","FileCollapse","sharedPath","RuleTableHead","TableHead","TableRow","TableCell","RuleTableRow","ruleName","filePaths","sharedStart","some","startsWith","getSharedPath","flex","justifyContent","align","valign","docs","description","href","target","rel","fixable","recommended","category","paddingBottom","paddingTop","colSpan","pb","Island","Grid","xs","marginTop","mb","ContentWithReport","container","spacing","ButtonGroup","Button","TableContainer","component","Paper","Table","TableBody","ContentEmpty","textAlign","CircularProgress","Alert","severity","AlertTitle","ParamPill","styled","marginLeft","marginRight","EmptyContentLayout","alignContent","Content","reportParam","Summary","totalQuantity","selectTotal","files","rules","whiteSpace","AppHeader","AppBar","position","Toolbar","flexGrow","right","top","Title","AppProvider","store","configureStore","devTools","App","styles","AppBody","div","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0534e1b3.chunk.js","sourcesContent":["import { css } from '@emotion/react'\n\nexport const globalStyles = css({\n  body: {\n    margin: 0,\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n  },\n  code: {\n    fontFamily:\n      'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace',\n  },\n  'html,body': {\n    minHeight: '100%',\n    margin: 0,\n    padding: 0,\n  },\n})\n","export const getQueryParams = (search = window.location.search) => {\n  const qs = search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('=').map(decodeURIComponent))\n  const qsMap: Record<string, string> = {}\n  qs.forEach(([name, val]) => {\n    qsMap[name] = val\n  })\n  return qsMap\n}\n","import { createAction, createReducer } from '@reduxjs/toolkit'\nimport { ESLintReport } from '../eslintReport'\n\nexport const updateReportURL = createAction<string>('updateReportURL' as const)\nexport const updateReport = createAction<ESLintReport>('updateReport' as const)\n\nexport const reportReducer = createReducer(\n  {\n    report: null as null | ESLintReport,\n    url: null as null | string,\n  },\n  (builder) =>\n    builder\n      .addCase(updateReportURL, (state, action) => {\n        state.url = action.payload\n      })\n      .addCase(updateReport, (state, action) => {\n        state.report = action.payload\n      }),\n)\n","import { createEntityAdapter, createSlice, nanoid } from '@reduxjs/toolkit'\nimport { ESLintMessage } from '../eslintReport'\nimport { updateReport } from './report'\n\nexport interface ReportIssue extends Omit<ESLintMessage, 'ruleId'> {\n  issueId: string\n  filePath: string\n  ruleId: string\n}\n\nexport const issueAdapter = createEntityAdapter<ReportIssue>({\n  selectId: (issue) => issue.issueId,\n})\n\nexport const issueSlice = createSlice({\n  name: 'msg',\n  initialState: issueAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) =>\n    builder.addCase(updateReport, (state, action) => {\n      const { results } = action.payload\n      const issues: ReportIssue[] = []\n      results.forEach((res) => {\n        res.messages.forEach((msg) => {\n          if (!msg.ruleId) {\n            return\n          }\n          issues.push({\n            issueId: nanoid(),\n            filePath: res.filePath,\n            ...msg,\n            ruleId: msg.ruleId,\n          })\n        })\n      })\n      return issueAdapter.addMany(state, issues)\n    }),\n})\n","import { createEntityAdapter, createSlice } from '@reduxjs/toolkit'\nimport { ESLintReportItem } from '../eslintReport'\nimport { updateReport } from './report'\n\nexport type ReportFile = Omit<ESLintReportItem, 'messages'>\n\nexport const fileAdapter = createEntityAdapter<ReportFile>({\n  selectId: (itm) => itm.filePath,\n})\n\nexport const fileSlice = createSlice({\n  name: 'file',\n  initialState: fileAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) =>\n    builder.addCase(updateReport, (state, action) =>\n      fileAdapter.addMany(state, selectFiles(action)),\n    ),\n})\n\nconst selectFiles = (action: ReturnType<typeof updateReport>) => {\n  const files = action.payload.results.map((it) => ({\n    ...it,\n    messages: undefined,\n  }))\n  return files\n}\n","import { createEntityAdapter, createSlice, EntityState } from '@reduxjs/toolkit'\nimport { ESLintRuleMeta } from '../eslintReport'\nimport { updateReport } from './report'\n\nexport interface ReportRule extends Omit<ESLintRuleMeta, 'ruleId'> {\n  ruleId: string\n}\n\nexport const ruleAdapter = createEntityAdapter<ReportRule>({\n  selectId: (itm) => itm.ruleId,\n})\n\nexport const ruleSlice = createSlice({\n  name: 'rule',\n  initialState: ruleAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) =>\n    builder.addCase(updateReport, (state, action) =>\n      ruleAdapter.addMany(\n        state as EntityState<ReportRule>,\n        selectRules(action),\n      ),\n    ),\n})\n\nconst selectRules = (action: ReturnType<typeof updateReport>) => {\n  const { rulesMeta } = action.payload.metadata\n  const ruleIds = Object.keys(rulesMeta)\n  const rules = ruleIds.map((ruleId) => ({\n    ruleId,\n    ...rulesMeta[ruleId],\n  }))\n  return rules\n}\n","import { reportReducer } from './feature/report'\nimport { issueSlice } from './feature/issue'\nimport { fileSlice } from './feature/file'\nimport { ruleSlice } from './feature/rule'\n\nexport const ROOT_REDUCER = {\n  report: reportReducer,\n  issue: issueSlice.reducer,\n  file: fileSlice.reducer,\n  rule: ruleSlice.reducer,\n}\n\ntype ReducerMap = typeof ROOT_REDUCER\ntype RKeys = keyof ReducerMap\n\nexport type AppState = {\n  [K in RKeys]: ReturnType<ReducerMap[K]>\n}\n\nexport const rootSelect: {\n  [K in RKeys]: (state: AppState) => AppState[K]\n} = {\n  file: (state) => state.file,\n  issue: (state) => state.issue,\n  report: (state) => state.report,\n  rule: (state) => state.rule,\n}\n\ndeclare module 'react-redux' {\n  interface DefaultRootState extends AppState {\n    z?: never\n  }\n}\n","import { useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { updateReportURL, updateReport } from '../feature/report'\nimport { getQueryParams } from '../../lib/getQueryParams'\nimport { rootSelect } from '../reducerMap'\n\nexport const useReport = () => {\n  const dispatch = useDispatch()\n  const fetchReport = useMemo(\n    () => async (url: string) => {\n      console.log('fetchReport', url)\n      dispatch(updateReportURL(getQueryParams().report))\n      const resp = await axios.get(url)\n      console.log('fetchReport.data', resp.data)\n      dispatch(updateReport(resp.data))\n    },\n    [dispatch],\n  )\n  const reportState = useSelector(rootSelect.report)\n  return {\n    report: reportState.report,\n    reportURL: reportState.url,\n    fetchReport,\n  }\n}\n","import { useSelector } from 'react-redux'\nimport { fileAdapter } from '../feature/file'\nimport { rootSelect } from '../reducerMap'\n\nexport const selFile = fileAdapter.getSelectors(rootSelect.file)\n\nexport const useAllFiles = () => {\n  return {\n    allFiles: useSelector(selFile.selectAll),\n  }\n}\n\nexport const useOneFile = (filePath: string) => {\n  const file = useSelector((state) => selFile.selectById(state, filePath))\n  return {\n    file,\n  }\n}\n\nexport const useFileSearch = (search: string) => {\n  const filesFound = useSelector((state) => {\n    const allFiles = selFile.selectAll(state)\n    return allFiles.filter((file) => file.filePath.indexOf(search) > -1)\n  })\n  return {\n    filesFound,\n  }\n}\n","import { useSelector } from 'react-redux'\nimport { ruleAdapter } from '../feature/rule'\nimport { rootSelect } from '../reducerMap'\n\nexport const selRule = ruleAdapter.getSelectors(rootSelect.rule)\n\nexport const useAllRules = () => {\n  return {\n    allRules: useSelector(selRule.selectAll),\n  }\n}\n\nexport const useRulesById = (ruleId: string) => {\n  return {\n    rule: useSelector(\n      (state) => selRule.selectById(state, ruleId),\n      (a, b) => a?.ruleId === b?.ruleId,\n    ),\n  }\n}\n\nexport const useRuleSearch = (search: string) =>\n  useSelector((state) => ({\n    rulesFound: selRule\n      .selectAll(state)\n      .filter((rule) => rule.ruleId.indexOf(search) > -1),\n  }))\n","import { ReportIssue } from '../app-logic/feature/issue'\n\nexport const groupIssuesCount = (issuesList: ReportIssue[]) => {\n  return {\n    issueTotalCount: issuesList.length,\n    errorCount: issuesList.filter((is) => is.fatal).length,\n    warnCount: issuesList.filter((is) => !is.fatal).length,\n  }\n}\n","import { useSelector, DefaultRootState } from 'react-redux'\nimport { issueAdapter, ReportIssue } from '../feature/issue'\nimport { rootSelect } from '../reducerMap'\nimport { selFile } from './useFile'\nimport { selRule } from './useRule'\nimport { ReportFile } from '../feature/file'\nimport { ReportRule } from '../feature/rule'\nimport { groupIssuesCount } from '../../lib/groupIssuesCount'\n\nexport const selIssue = issueAdapter.getSelectors(rootSelect.issue)\n\nexport const useIssues = (\n  filter = (item: ReportIssue, index: number) => true,\n) =>\n  useSelector(\n    (state: DefaultRootState) => {\n      const issuesList = selIssue.selectAll(state).filter(filter)\n      const filesWithIssuesMap: Record<string, ReportFile> = {}\n      const rulesViolatedMap: Record<string, ReportRule> = {}\n      issuesList.forEach((issue) => {\n        const { filePath, ruleId } = issue\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        filesWithIssuesMap[filePath] = selFile.selectById(state, filePath)!\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        rulesViolatedMap[ruleId] = selRule.selectById(state, ruleId)!\n      })\n\n      return {\n        issuesList,\n        filesWithIssuesMap,\n        rulesViolatedMap,\n        issuesQuantity: {\n          ...groupIssuesCount(issuesList),\n          fileCount: Object.keys(filesWithIssuesMap).length,\n          ruleCount: Object.keys(rulesViolatedMap).length,\n        },\n        memoHash: issuesList.map((is) => is.issueId).join('\\n'),\n      }\n    },\n    (a, b) => a.memoHash === b.memoHash,\n  )\n","export const keyof = <T>(obj: T) => (Object.keys(obj) as unknown) as (keyof T)[]\n\nexport const keyVal = <T>(obj: T) =>\n  (Object.entries(obj).map(([key, value]) => ({ key, value })) as unknown) as {\n    [K in keyof T]-?: { key: K; value: T[K] }\n  }[keyof T][]\n\nexport const isDefined = <T>(obj: T | null | undefined): obj is T =>\n  obj !== null\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { isDefined } from '../../lib/iter'\n\nconst nanoid = () => (Date.now() + Math.random()).toString(36)\n\nexport const createEventEmitter = <EventMap = Record<string, unknown>>() => {\n  type AllEventNames = keyof EventMap & string\n  type Listener<EvtName extends AllEventNames> = (\n    event: EventMap[EvtName],\n  ) => void\n\n  const eventNameMap: Record<string, AllEventNames | null> = {}\n  const listenerMap: Record<string, Listener<AllEventNames> | null> = {}\n\n  const getEventListeners = <EvtName extends AllEventNames>(\n    eventName: EvtName,\n  ): Listener<EvtName>[] => {\n    const ids = Object.keys(eventNameMap).filter(\n      (id) => eventNameMap[id] === eventName,\n    )\n    return ids.map((id) => listenerMap[id]).filter(isDefined)\n  }\n\n  const removeListener = (id: string) => {\n    listenerMap[id] = null\n    eventNameMap[id] = null\n  }\n\n  const emitEvent = <EvtName extends AllEventNames>(\n    eventName: EvtName,\n    payload: EventMap[EvtName],\n  ) => {\n    Promise.resolve(null).then(() => {\n      for (const onEvent of getEventListeners(eventName)) {\n        onEvent(payload)\n      }\n    })\n  }\n\n  return {\n    useEventListener: <EvtName extends AllEventNames>(\n      eventName: EvtName,\n      onEvent: Listener<EvtName>,\n    ) => {\n      const id = useMemo(nanoid, [])\n      eventNameMap[id] = eventName\n      listenerMap[id] = onEvent as Listener<AllEventNames>\n      useEffect(() => () => removeListener(id), [id])\n    },\n\n    useEventEmitter: <EvtName extends AllEventNames>(eventName: EvtName) =>\n      useCallback(\n        (payload: EventMap[EvtName]) => emitEvent(eventName, payload),\n        [eventName],\n      ),\n\n    emitEvent,\n  }\n}\n","import { createEventEmitter } from './createEventEmitter'\n\nconst { emitEvent, useEventEmitter, useEventListener } = createEventEmitter<{\n  'ALL Expand': true\n  'ALL Collapse': false\n  'FILE Expand': string\n  'FILE Collapse': string\n  'RULE Expand': string\n  'RULE Collapse': string\n}>()\n\nexport { emitEvent, useEventEmitter, useEventListener }\n","export const getSharedPath = (filePaths: string[]) => {\n  let sharedStart = filePaths[0] || ''\n  filePaths.some((filePath) => {\n    if (sharedStart === '') {\n      return true\n    }\n    while (sharedStart !== '') {\n      if (filePath.startsWith(sharedStart)) {\n        return false\n      }\n      sharedStart = removeLastSegment(sharedStart)\n    }\n    return true\n  })\n  return sharedStart\n}\n\nexport const removeLastSegment = (filePath: string) => {\n  const parts = filePath.split('/')\n  parts.pop()\n  return parts.join('/')\n}\n","import React from 'react'\nimport { Typography, Box, Collapse, IconButton } from '@material-ui/core'\nimport {\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  Check,\n  Clear,\n} from '@material-ui/icons'\n\nexport const GrayText: React.FC = (props) => (\n  <Typography variant=\"caption\" color=\"GrayText\">\n    {props.children}\n  </Typography>\n)\n\nexport const SmallText: React.FC = (props) => (\n  <Typography variant=\"caption\">{props.children}</Typography>\n)\n\nexport const CollapseWithTitle: React.FC<{\n  title: React.ReactNode\n  isOpen: boolean\n  onToggle: (val: boolean) => void\n}> = (props) => {\n  return (\n    <>\n      <Box\n        onClick={() => props.onToggle(!props.isOpen)}\n        p={1}\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n      >\n        <IconButton\n          aria-label=\"expand\"\n          size=\"small\"\n          onClick={() => props.onToggle(!props.isOpen)}\n        >\n          {props.isOpen ? icon.up : icon.down}\n        </IconButton>{' '}\n        <Box>{props.title}</Box>\n      </Box>\n      <Collapse in={props.isOpen} timeout={300} unmountOnExit={false}>\n        <Box pt={1}>{props.children}</Box>\n      </Collapse>\n    </>\n  )\n}\n\nexport const icon = {\n  yes: <Check style={{ fontSize: 20, verticalAlign: 'middle' }} />,\n  no: <Clear style={{ fontSize: 20, verticalAlign: 'middle' }} />,\n  up: <KeyboardArrowUp />,\n  down: <KeyboardArrowDown />,\n}\n","import React from 'react'\nimport { Chip, Box } from '@material-ui/core'\n\nexport const CountPill: React.VFC<{\n  type: PillType\n  number: number\n  showZero?: boolean\n}> = (props) =>\n  props.showZero || props.number > 0 ? (\n    <Pill label={String(props.number)} type={props.type} />\n  ) : null\n\nexport type PillType = 'error' | 'warn' | 'normal'\nconst PillColor: Record<PillType, [string, string] | null> = {\n  error: ['#f44336', '#fff'],\n  warn: ['#ffcf33', '#000'],\n  normal: null,\n}\n\nexport const Pill: React.VFC<{\n  type: PillType\n  label: React.ReactNode\n}> = (props) => {\n  const [backgroundColor, color] = PillColor[props.type] || []\n  return (\n    <Box mr={1} display=\"inline-block\">\n      <Chip\n        size=\"small\"\n        label={props.label}\n        style={backgroundColor ? { backgroundColor, color } : undefined}\n        variant=\"filled\"\n      />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { useEventListener } from '../app-logic/hook/events'\nimport { CollapseWithTitle } from './util'\n\nexport const Expandable: React.FC<{\n  title: React.ReactNode\n}> = (props) => {\n  const [isOpen, setOpen] = useState(false)\n  useEventListener('ALL Collapse', setOpen)\n  useEventListener('ALL Expand', setOpen)\n  return (\n    <CollapseWithTitle isOpen={isOpen} onToggle={setOpen} title={props.title}>\n      {props.children}\n    </CollapseWithTitle>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { extractLines } from '../lib/extractLines'\nimport { ReportIssue } from '../app-logic/feature/issue'\nimport { GrayText } from './util'\nimport { Expandable } from './Expandable'\nimport Prism from 'prismjs'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-javascript'\n// import 'prismjs/components/prism-tsx'\nimport 'prismjs/components/prism-hcl'\n// import 'prismjs/components/prism-json5'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport 'prismjs/themes/prism-okaidia.css'\n\nexport const IssueCollapse: React.VFC<{\n  issue: ReportIssue\n  fileSource: string\n}> = ({ issue, fileSource }) => {\n  const lang = 'typescript'\n\n  const lines = extractLines(fileSource, {\n    startLine: issue.line,\n    endLine: issue.endLine,\n    offset: 3,\n  }).join('\\n')\n\n  const [code, setCode] = useState('')\n  useEffect(() => {\n    if (!code) {\n      requestAnimationFrame(() => {\n        setCode(Prism.highlight(lines, Prism.languages[lang], lang))\n      })\n    }\n  }, [lines, code])\n\n  return (\n    <Expandable\n      title={\n        <>\n          {issue.message}\n          <br />\n          <GrayText>\n            From line {issue.line} to {issue.endLine}\n          </GrayText>\n        </>\n      }\n    >\n      <pre\n        data-start={String(issue.line)}\n        className={`line-numbers language-${lang}`}\n      >\n        <code dangerouslySetInnerHTML={{ __html: code || lines }} />\n      </pre>\n    </Expandable>\n  )\n}\n","export const extractLines = (\n  source: string,\n  {\n    startLine,\n    endLine = startLine,\n    offset = 0,\n  }: {\n    startLine: number\n    endLine?: number\n    offset: number\n  },\n) =>\n  source\n    .split('\\n')\n    .filter(\n      (_line, index) =>\n        index >= startLine - offset && index <= endLine + offset,\n    )\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { ReportIssue } from '../app-logic/feature/issue'\nimport { groupIssuesCount } from '../lib/groupIssuesCount'\nimport { SmallText, GrayText } from './util'\nimport { CountPill } from './Pill'\nimport { IssueCollapse } from './IssueCollapse'\n\nexport const FileCollapse: React.VFC<{\n  filePath: string\n  fileSource: string\n  sharedPath: string\n  issues: ReportIssue[]\n}> = ({ filePath, fileSource, sharedPath, issues }) => {\n  const { warnCount, errorCount } = groupIssuesCount(issues)\n  return (\n    <Box pt={3}>\n      <Box>\n        <SmallText>\n          <CountPill type=\"error\" number={errorCount} />\n          <CountPill type=\"warn\" number={warnCount} />\n          <GrayText>...</GrayText>\n          {filePath.replace([sharedPath, '/'].join(''), '')}{' '}\n        </SmallText>\n      </Box>\n      <Box>\n        {issues.map((issue) => (\n          <IssueCollapse\n            key={issue.issueId}\n            issue={issue}\n            fileSource={fileSource}\n          />\n        ))}\n      </Box>\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  TableCell,\n  TableHead,\n  TableRow,\n  IconButton,\n  Box,\n  Collapse,\n} from '@material-ui/core'\nimport { getSharedPath } from '../lib/filePath'\nimport { ReportRule } from '../app-logic/feature/rule'\nimport { useIssues } from '../app-logic/hook/useIssues'\nimport { GrayText, icon, SmallText } from './util'\nimport { FileCollapse } from './FileCollapse'\nimport { useEventListener } from '../app-logic/hook/events'\n\nexport const RuleTableHead: React.VFC = () => (\n  <TableHead>\n    <TableRow>\n      <TableCell>Name</TableCell>\n      <TableCell>Description</TableCell>\n    </TableRow>\n  </TableHead>\n)\n\nexport const RuleTableRow: React.VFC<{\n  ruleName: string\n  rule: ReportRule\n}> = ({ ruleName, rule }) => {\n  const [isOpen, setOpen] = useState(false)\n  useEventListener('ALL Collapse', setOpen)\n  useEventListener('ALL Expand', setOpen)\n  const { issuesList, filesWithIssuesMap, issuesQuantity } = useIssues(\n    (issue) => issue.ruleId === rule.ruleId,\n  )\n  const filePaths = Object.keys(filesWithIssuesMap)\n  const sharedPath = getSharedPath(filePaths)\n  return (\n    <>\n      <TableRow>\n        <TableCell onClick={() => setOpen(!isOpen)}>\n          <Box\n            flex={1}\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"flex-start\"\n          >\n            <Box mr={2} display=\"inline-block\">\n              <IconButton aria-label=\"expand row\" size=\"small\">\n                {isOpen ? icon.up : icon.down}\n              </IconButton>\n            </Box>\n\n            <Box>\n              {ruleName}\n              <br />\n              <SmallText>\n                {issuesQuantity.issueTotalCount} issues in{' '}\n                {issuesQuantity.fileCount} files.\n              </SmallText>\n            </Box>\n          </Box>\n        </TableCell>\n\n        <TableCell align=\"left\" valign=\"top\">\n          {rule.docs?.description}\n          {rule.docs?.url && (\n            <SmallText>\n              <br />\n              <a href={rule.docs.url} target=\"_blank\" rel=\"noreferrer\">\n                Documentation\n              </a>\n            </SmallText>\n          )}\n\n          <br />\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Box mr={2}>\n              <GrayText>\n                Fixable? {rule.fixable ? icon.yes : icon.no}\n                <br />\n                Recommended? {rule.docs?.recommended ? icon.yes : icon.no}\n              </GrayText>\n            </Box>\n            <GrayText>\n              Category: {rule.docs?.category}\n              <br />\n              Type: {rule.type || 'N/A'}\n            </GrayText>\n          </Box>\n        </TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={2}>\n          <Collapse in={isOpen} timeout={300} unmountOnExit={false}>\n            <Box pb={5} pt={2}>\n              <SmallText>\n                Files in <GrayText>{sharedPath}</GrayText>:\n              </SmallText>\n              {filePaths.map((filePath) => (\n                <FileCollapse\n                  key={filePath}\n                  filePath={filePath}\n                  fileSource={filesWithIssuesMap[filePath].source || ''}\n                  sharedPath={sharedPath}\n                  issues={issuesList.filter((is) => is.filePath === filePath)}\n                />\n              ))}\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  )\n}\n","import React from 'react'\nimport { Grid, GridProps, Typography } from '@material-ui/core'\n\nexport const Island: React.FC<{\n  title?: string\n  marginTop?: GridProps['marginTop']\n  marginBottom?: GridProps['marginBottom']\n  padding?: GridProps['padding']\n}> = (props) => (\n  <Grid item xs={12} marginTop={props.marginTop || 0} padding={3} pt={0}>\n    {props.title && (\n      <Typography variant=\"h4\" mb={1}>\n        {props.title}\n      </Typography>\n    )}\n    {props.children}\n  </Grid>\n)\n","import React from 'react'\nimport {\n  Grid,\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  Box,\n  Button,\n  ButtonGroup,\n} from '@material-ui/core'\nimport { useIssues } from '../app-logic/hook/useIssues'\nimport { emitEvent } from '../app-logic/hook/events'\nimport { RuleTableHead, RuleTableRow } from './RuleTableRow'\nimport { Island } from './Island'\n\nexport const ContentWithReport: React.VFC = () => {\n  const { rulesViolatedMap } = useIssues()\n  return (\n    <Box p={3} pb={10}>\n      <Grid container spacing={3}>\n        <Island>\n          <ButtonGroup size=\"small\">\n            <Button onClick={() => emitEvent('ALL Expand', true)}>\n              Expand all\n            </Button>\n            <Button onClick={() => emitEvent('ALL Collapse', false)}>\n              Collapse all\n            </Button>\n          </ButtonGroup>\n        </Island>\n        <Island title=\"By rules:\">\n          <TableContainer component={Paper}>\n            <Table size=\"small\">\n              <RuleTableHead />\n              <TableBody>\n                {Object.keys(rulesViolatedMap).map((ruleId) => (\n                  <RuleTableRow\n                    key={ruleId}\n                    ruleName={ruleId}\n                    rule={rulesViolatedMap[ruleId]}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Island>\n      </Grid>\n    </Box>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {\n  CircularProgress,\n  Typography,\n  Grid,\n  Alert,\n  Chip,\n  AlertTitle,\n} from '@material-ui/core'\n\nexport const ContentEmpty: React.VFC<{\n  variant: 'loading' | 'reportMissing' | 'empty'\n}> = ({ variant }) => {\n  if (variant === 'loading') {\n    return (\n      <EmptyContentLayout>\n        <Grid item textAlign=\"center\">\n          <CircularProgress size={100} />\n        </Grid>\n      </EmptyContentLayout>\n    )\n  }\n\n  if (variant === 'reportMissing') {\n    return (\n      <EmptyContentLayout>\n        <Alert severity=\"error\">\n          <AlertTitle>Report url is missing.</AlertTitle>\n          <Typography variant=\"caption\">\n            Open this page with\n            <ParamPill variant=\"outlined\" size=\"small\" label=\"report\" />\n            parameter\n          </Typography>\n        </Alert>\n      </EmptyContentLayout>\n    )\n  }\n\n  return (\n    <EmptyContentLayout>\n      <Alert severity=\"success\">No issues 💪</Alert>\n    </EmptyContentLayout>\n  )\n}\n\nconst ParamPill = styled(Chip)({\n  marginLeft: '0.5em',\n  marginRight: '0.5em',\n})\n\nconst EmptyContentLayout: React.FC = (props) => (\n  <Grid\n    container\n    spacing={3}\n    justifyContent=\"center\"\n    alignContent=\"stretch\"\n    padding={20}\n  >\n    <Grid item xs={12}>\n      {props.children}\n    </Grid>\n  </Grid>\n)\n","import React, { useEffect } from 'react'\nimport { getQueryParams } from '../lib/getQueryParams'\nimport { useReport } from '../app-logic/hook/useReport'\nimport { ContentWithReport } from './ContentWithReport'\nimport { ContentEmpty } from './ContentEmpty'\n\nexport const Content: React.VFC = () => {\n  const reportParam = getQueryParams().report\n  const { report, reportURL, fetchReport } = useReport()\n  useEffect(() => {\n    if (reportParam && reportURL !== reportParam) {\n      fetchReport(reportParam)\n    }\n  }, [reportParam, reportURL, fetchReport])\n\n  if (!reportParam) {\n    return <ContentEmpty variant=\"reportMissing\" />\n  }\n  if (!report) {\n    return <ContentEmpty variant=\"loading\" />\n  }\n  if (!report.results?.[0]) {\n    return <ContentEmpty variant=\"empty\" />\n  }\n\n  return <ContentWithReport />\n}\n","import { useSelector } from 'react-redux'\nimport { ruleAdapter } from '../feature/rule'\nimport { rootSelect } from '../reducerMap'\nimport { selIssue } from './useIssues'\nimport { selFile } from './useFile'\n\nconst selRule = ruleAdapter.getSelectors(rootSelect.rule)\n\nexport const useTotalCounts = () => ({\n  issues: useSelector(selIssue.selectTotal),\n  files: useSelector(selFile.selectTotal),\n  rules: useSelector(selRule.selectTotal),\n})\n","import React, { useState } from 'react'\nimport { Paper } from '@material-ui/core'\nimport { useTotalCounts } from '../app-logic/hook/useTotalCounts'\nimport { useIssues } from '../app-logic/hook/useIssues'\nimport { CollapseWithTitle, SmallText } from './util'\nimport { Island } from './Island'\nimport { CountPill } from './Pill'\n\nexport const Summary: React.FC = () => {\n  const totalQuantity = useTotalCounts()\n  const { issuesQuantity } = useIssues()\n  const [isOpen, setOpen] = useState(false)\n  return (\n    <Paper>\n      <CollapseWithTitle\n        isOpen={isOpen}\n        onToggle={setOpen}\n        title={\n          <div style={{ whiteSpace: 'nowrap' }}>\n            Errors:{' '}\n            <CountPill\n              type=\"error\"\n              showZero={true}\n              number={issuesQuantity.errorCount}\n            />\n            <br />\n            Warnings:{' '}\n            <CountPill\n              type=\"warn\"\n              showZero={true}\n              number={issuesQuantity.warnCount}\n            />\n          </div>\n        }\n      >\n        <Island>\n          <SmallText>\n            All issues: {issuesQuantity.issueTotalCount}\n            <br />\n            Files: {issuesQuantity.fileCount} of {totalQuantity.files}\n            <br />\n            Rules: {issuesQuantity.ruleCount} of {totalQuantity.rules}\n          </SmallText>\n        </Island>\n      </CollapseWithTitle>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { AppBar, Box, Toolbar, Typography } from '@material-ui/core'\nimport { useReport } from '../../app-logic/hook/useReport'\nimport { Summary } from '../Summary'\nimport { SmallText } from '../util'\n\nexport const AppHeader: React.VFC = () => (\n  <AppBar position=\"sticky\">\n    <Toolbar>\n      <Box flexGrow={1}>\n        <Title />\n      </Box>\n      <Box position=\"absolute\" right={20} top={0}>\n        <SmallText>\n          <Summary />\n        </SmallText>\n      </Box>\n    </Toolbar>\n  </AppBar>\n)\n\nconst Title: React.VFC = () => {\n  const { reportURL } = useReport()\n  return (\n    <Typography variant=\"h6\">\n      Eslint reporter: <small>{reportURL}</small>\n    </Typography>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore } from '../../app-logic/createStore'\n\n// declare module 'react-redux' {\n//   interface DefaultRootState extends AppState {\n//     z?: never\n//   }\n// }\n\nexport const AppProvider: React.FC = (props) => {\n  const store = useMemo(() => createStore(), [])\n  return <Provider store={store}>{props.children}</Provider>\n}\n","import {\n  configureStore,\n  ReducersMapObject,\n  Action,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { ROOT_REDUCER } from './reducerMap'\n\nexport const createStore = <S, A extends Action = PayloadAction>(\n  reducer?: ReducersMapObject<S, A>,\n) =>\n  configureStore({\n    reducer: {\n      ...reducer,\n      ...ROOT_REDUCER,\n    },\n    devTools: true,\n  })\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Global } from '@emotion/react'\nimport { globalStyles } from './globalStyles'\nimport { Content } from '../Content'\nimport { AppHeader } from './AppHeader'\nimport { AppProvider } from './AppProvider'\n\nexport const App: React.VFC = () => (\n  <AppProvider>\n    <Global styles={globalStyles} />\n    <AppHeader />\n    <AppBody>\n      <Content />\n    </AppBody>\n  </AppProvider>\n)\n\nconst AppBody = styled.div({\n  height: '100vh',\n})\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './presentation/layout/App'\nimport reportWebVitals from './presentation/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}